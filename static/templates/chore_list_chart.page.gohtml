{{- /*gotype: github.com/SimonSchneider/chore-tracker/internal/chore.SettingsView*/ -}}
<!DOCTYPE html>
<html lang="en">
<head>
    {{ template "head.gohtml" "Chores Settings" }}
    <script src="/static/public/echarts.min.js"></script>
</head>
<body>
<header>
    {{ template "chore_list_chart.nav_header.gohtml" . }}
</header>
<main>
    <div class="container">
        <div id="main" style="width: 100%; height:900px;"></div>
    </div>
    <script>
        const myChart = echarts.init(document.getElementById('main'), null, {
            renderer: 'svg'
        });
        window.addEventListener('resize', function () {
            myChart.resize();
        });

        function getYear(d) {
            return d.split('-')[0]
        }

        function getRange(min, max) {
            if (min === max) {
                return min
            }
            return [min, max];
        }

        function getMaxVal(data) {
            let max = -Infinity;
            for (const {value} of data) {
                max = Math.max(max, value);
            }
            return max
        }

        fetch('charts/completion_calendar')
            .then(r => r.json())
            .then(({data}) => {
                if (!data) {
                    return
                }
                const valMax = getMaxVal(data)
                const rangeMin = getYear(data[0].date)
                const rangeMax = getYear(data[data.length - 1].date)
                const range = getRange(rangeMin, rangeMax)
                const computedStyle = window.getComputedStyle(document.body)
                const minColor = computedStyle.getPropertyValue('--color-accent')
                const maxColor = computedStyle.getPropertyValue('--color-bold')
                const backgroundColor = computedStyle.getPropertyValue('--color-background')
                myChart.setOption({
                    tooltip: {},
                    visualMap: {
                        min: 0,
                        max: valMax,
                        calculable: true,
                        orient: 'vertical',
                        top: 'center',
                        left: 10,
                        inRange: {
                            color: [minColor, maxColor]
                        },
                        textStyle: {
                            color: computedStyle.getPropertyValue('--color-tertiary')
                        }
                    },
                    backgroundColor: backgroundColor,
                    calendar: {
                        orient: 'vertical',
                        cellSize: [20, 'auto'],
                        left: 'center',
                        splitLine: {
                            lineStyle: {
                                color: computedStyle.getPropertyValue('--color-tertiary')
                            }
                        },
                        itemStyle: {
                            color: backgroundColor,
                            borderColor: computedStyle.getPropertyValue('--color-secondary'),
                            shadowColor: computedStyle.getPropertyValue('--color-highlight')
                        },
                        dayLabel: {
                            firstDay: 1,
                            color: computedStyle.getPropertyValue('--color-tertiary')
                        },
                        monthLabel: {
                            color: computedStyle.getPropertyValue('--color-tertiary')
                        },
                        yearLabel: {
                            color: computedStyle.getPropertyValue('--color-tertiary')
                        },
                        range,
                    },
                    series: {
                        type: 'heatmap',
                        coordinateSystem: 'calendar',
                        data: data.map(d => [d.date, d.value])
                    }
                })
            })
            .catch(console.error)
    </script>
</main>
</body>
</html>

